{
    "id": "36abe031-962d-482e-8e1e-a556ed99d5a3",
    "name": "Script usage summary (cscript.exe)",
    "description": "Daily summary of vbs scripts run across the environment.",
    "techniques": ["Execution"],
    "query": "let ProcessCreationEvents=() {\n    let processEvents=SecurityEvent\n    | where EventID==4688\n    | project TimeGenerated, ComputerName=Computer, AccountName=SubjectUserName, AccountDomain=SubjectDomainName, FileName=tostring(split(NewProcessName, '\\\\')[-1]), ProcessCommandLine = CommandLine, InitiatingProcessFileName=ParentProcessName;\n    processEvents;\n};\n// Daily summary of cscript activity â€“ extracting script name and parameters from commandline:\nProcessCreationEvents \n| where FileName =~ 'cscript.exe'\n| project removeSwitches = replace(@'/+[a-zA-Z0-9:]+', '', ProcessCommandLine) // remove commandline switches\n| project CommandLine = trim(@'[a-zA-Z0-9\\\\:\"]*cscript(.exe)?(\")?(\\s)+', removeSwitches) // remove the leading cscript.exe process name \n// extract the script name: \n| project ScriptName= iff(CommandLine startswith @'\"', \n    extract(@'([:\\\\a-zA-Z_\\-\\s0-9\\.()]+)(\"?)', 0, CommandLine), // handle case where script name is enclosed in \" characters\n    extract(@'([:\\\\a-zA-Z_\\-0-9\\.()]+)(\"?)', 0, CommandLine)),  // handle case where script name is not enclosed in quotes                    \n    CommandLine \n| project ScriptName=trim(@'\"', ScriptName) , ScriptNameLength=strlen(ScriptName), CommandLine \n// extract remainder of commandline as script parameters: \n| project ScriptName, ScriptParams = iff(ScriptNameLength < strlen(CommandLine), substring(CommandLine, ScriptNameLength +1), '')\n| summarize by ScriptName, ScriptParams "
}
