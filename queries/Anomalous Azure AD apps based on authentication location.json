{

  "id": "73ac88c0-f073-4b23-8ac4-9f40ea11308d",

  "name": "Anomalous Azure AD apps based on authentication location",

  "description": "This query over Azure AD sign-in activity highlights Azure AD apps with an unusually high ratio of distinct geolocations versus total number of authentications.",

  "techniques": [ "InitialAccess" ],

  "query": "let timeRange=ago(14d);\nlet azureSignIns = \nSigninLogs\n| where TimeGenerated >= timeRange\n| where SourceSystem == \"Azure AD\"\n| project TimeGenerated, OperationName, AppDisplayName , Identity, UserId, UserPrincipalName, Location, LocationDetails , ClientAppUsed , DeviceDetail, ConditionalAccessPolicies; \nazureSignIns \n| extend locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring(LocationDetails[\"city\"]), \";\" , tostring(LocationDetails[\"geoCoordinates\"]))\n| summarize rawSigninCount=count(), countByAccount=dcount(UserId), locationCount=dcount(locationString) by AppDisplayName\n| where rawSigninCount < 1000       // tail - pick a threshold to rule out the very-high volume Azure AD apps \n| where locationCount>countByAccount    // more locations than accounts \n| where 1.0*rawSigninCount / locationCount > 0.8 // almost as many / more locations than sign-ins!\n| order by rawSigninCount  desc\n| join kind = leftouter (\n   azureSignIns \n) on AppDisplayName\n| project AppDisplayName, TimeGenerated , Identity, rawSigninCount, countByAccount , locationCount,  locationString= strcat(tostring(LocationDetails[\"countryOrRegion\"]), \"/\", tostring(LocationDetails[\"state\"]), \"/\", tostring\n(LocationDetails[\"city\"]), \";\" , tostring(LocationDetails[\"geoCoordinates\"]))\n| order by AppDisplayName, TimeGenerated desc"

}
